blockInProgress:
  blockGasLimit: 98042
  parentHeader: AAAAAAAAAAAAAAAAAAAAAIIzXn73OyOIp0jfSxHxAexuPSKF_tqZQwXk5WaUltwOAwACAAAA8vz8YnfG17F0Frzq7ZJzGnDHsJpOIP7qsrOF_qhM2zADAAAAAjlpGm9PgrNDif_JRlBUWhz_Glq7d6xsPXmHzWEWaTkFAAAAf5M620NHvX7CUIAR0TymFj-zeCo3Kb1YcgrNPi3UuCT__________________________________________-U1kxeUelXPOb1h6nJJU2PdZY5FepidcGHwyUoaKEwsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAACAAAAAAAAAAAAAAAAAAAAAAJC9BF5JNsHXTFq9kADAlg-rAe4tJTUle8VYF8Noz9xz
  pendingData:
    pendingSuccessfulTxs:
    - IkPz8x9v7U-0jNuzXMq3S9Z_T4L6qWaM_yRqO7Q1_bo
    - w2xTGIy73x8XLCGhRWrrwYeyMdaMuL-s9jPO_xS3r8k
    - _Rjy1AmV6r_jJhJ3xwNK1n5CDzUxBt0dT903-H7IJC0
    - pzJND8MS-U_R7v7OD-wZlOSN9GAd9Z-Q-Fei-f8CH9U
    - 82x3O9lcDlxUYGaNBXK-bFodlv-6USQTjQQQtRbnqKU
    - K8beZ4jwOfRVUygjpQnb4q87av-uJh53pDQRXENgvL8
    - ygR88vxqgLcv5hhuJsp3S1QQlfui-CMd9YdXc04gQdc
    - esf2SuRiWmWGkSNEnsxkLVDxPBUmZfQcLRMVCy9Ef_s
    - nJr1AEl0cHqrNLByEWLFnsVfWg_6vBOKiKW-yfq5mwo
    - URqS0A3IjJzk___9dA75TI1FMX78BVyRWImqr1S19Jo
    - pEjgUKleRXqqo-wk3KO0VxcRqX9VknkFBbhOBw_eCsw
    pendingTableCreation:
    - free.test1_accounts
    pendingWrites:
      SYS:KeySets:
      - - test-admin
        - - - 11
            - '{"pred":"keys-all","keys":["368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca"]}'
      SYS:Modules:
      - - fungible-v2
        - - - 8
            - '{"module":{"imports":[],"name":{"namespace":null,"name":"fungible-v2"},"code":"(interface
              fungible-v2\n\n  \" Standard for fungible coins and tokens as specified
              in KIP-0002. \"\n\n   ; ----------------------------------------------------------------------\n   ;
              Schema\n\n   (defschema account-details\n    @doc \"Schema for results
              of ''account'' operation.\"\n    @model [ (invariant (!= \"\" sender))
              ]\n\n    account:string\n    balance:decimal\n    guard:guard)\n\n\n   ;
              ----------------------------------------------------------------------\n   ;
              Caps\n\n   (defcap TRANSFER:bool\n     ( sender:string\n       receiver:string\n       amount:decimal\n     )\n     @doc
              \" Managed capability sealing AMOUNT for transfer from SENDER to \\\n          \\
              RECEIVER. Permits any number of transfers up to AMOUNT.\"\n     @managed
              amount TRANSFER-mgr\n     )\n\n   (defun TRANSFER-mgr:decimal\n     (
              managed:decimal\n       requested:decimal\n     )\n     @doc \" Manages
              TRANSFER AMOUNT linearly, \\\n          \\ such that a request for 1.0
              amount on a 3.0 \\\n          \\ managed quantity emits updated amount
              2.0.\"\n     )\n\n   ; ----------------------------------------------------------------------\n   ;
              Functionality\n\n\n  (defun transfer:string\n    ( sender:string\n      receiver:string\n      amount:decimal\n    )\n    @doc
              \" Transfer AMOUNT between accounts SENDER and RECEIVER. \\\n         \\
              Fails if either SENDER or RECEIVER does not exist.\"\n    @model [ (property
              (> amount 0.0))\n             (property (!= sender \"\"))\n             (property
              (!= receiver \"\"))\n             (property (!= sender receiver))\n           ]\n    )\n\n   (defun
              transfer-create:string\n     ( sender:string\n       receiver:string\n       receiver-guard:guard\n       amount:decimal\n     )\n     @doc
              \" Transfer AMOUNT between accounts SENDER and RECEIVER. \\\n          \\
              Fails if SENDER does not exist. If RECEIVER exists, guard \\\n          \\
              must match existing value. If RECEIVER does not exist, \\\n          \\
              RECEIVER account is created using RECEIVER-GUARD. \\\n          \\ Subject
              to management by TRANSFER capability.\"\n     @model [ (property (>
              amount 0.0))\n              (property (!= sender \"\"))\n              (property
              (!= receiver \"\"))\n              (property (!= sender receiver))\n            ]\n     )\n\n   (defpact
              transfer-crosschain:string\n     ( sender:string\n       receiver:string\n       receiver-guard:guard\n       target-chain:string\n       amount:decimal\n     )\n     @doc
              \" 2-step pact to transfer AMOUNT from SENDER on current chain \\\n          \\
              to RECEIVER on TARGET-CHAIN via SPV proof. \\\n          \\ TARGET-CHAIN
              must be different than current chain id. \\\n          \\ First step
              debits AMOUNT coins in SENDER account and yields \\\n          \\ RECEIVER,
              RECEIVER_GUARD and AMOUNT to TARGET-CHAIN. \\\n          \\ Second step
              continuation is sent into TARGET-CHAIN with proof \\\n          \\ obtained
              from the spv ''output'' endpoint of Chainweb. \\\n          \\ Proof
              is validated and RECEIVER is credited with AMOUNT \\\n          \\ creating
              account with RECEIVER_GUARD as necessary.\"\n     @model [ (property
              (> amount 0.0))\n              (property (!= sender \"\"))\n              (property
              (!= receiver \"\"))\n              (property (!= sender receiver))\n              (property
              (!= target-chain \"\"))\n            ]\n     )\n\n   (defun get-balance:decimal\n     (
              account:string )\n     \" Get balance for ACCOUNT. Fails if account
              does not exist.\"\n     )\n\n   (defun details:object{account-details}\n     (
              account: string )\n     \" Get an object with details of ACCOUNT. \\\n     \\
              Fails if account does not exist.\"\n     )\n\n   (defun precision:integer\n     ()\n     \"Return
              the maximum allowed decimal precision.\"\n     )\n\n   (defun enforce-unit:bool\n     (
              amount:decimal )\n     \" Enforce minimum precision allowed for transactions.\"\n     )\n\n   (defun
              create-account:string\n     ( account:string\n       guard:guard\n     )\n     \"
              Create ACCOUNT with 0.0 balance, with GUARD controlling access.\"\n     )\n\n   (defun
              rotate:string\n     ( account:string\n       new-guard:guard\n     )\n     \"
              Rotate guard for ACCOUNT. Transaction is validated against \\\n     \\
              existing guard before installing new guard. \"\n     )\n\n)\n","meta":{"model":[],"docs":"
              Standard for fungible coins and tokens as specified in KIP-0002. "}},"refMap":{"enforce-unit":{"ref":{"defType":"Defun","defMeta":null,"funType":{"args":[{"name":"amount","type":"decimal","info":{"d":[6,3603,3603],"c":"amount"}}],"return":"bool"},"defName":"enforce-unit","defBody":{"scope":{"list":[],"type":"*","i":{"d":[120,3571,3571],"c":"(defun
              enforce-unit:bool\n     ( amount:decimal )\n     \" Enforce minimum
              precision allowed for transactions.\"\n     )\n\n   "}}},"module":{"namespace":null,"name":"fungible-v2"},"meta":{"model":[],"docs":"
              Enforce minimum precision allowed for transactions."},"info":{"d":[120,3571,3571],"c":"(defun
              enforce-unit:bool\n     ( amount:decimal )\n     \" Enforce minimum
              precision allowed for transactions.\"\n     )\n\n   "}}},"create-account":{"ref":{"defType":"Defun","defMeta":null,"funType":{"args":[{"name":"account","type":"string","info":{"d":[7,3727,3727],"c":"account"}},{"name":"guard","type":{"guard":null},"info":{"d":[5,3749,3749],"c":"guard"}}],"return":"string"},"defName":"create-account","defBody":{"scope":{"list":[],"type":"*","i":{"d":[160,3691,3691],"c":"(defun
              create-account:string\n     ( account:string\n       guard:guard\n     )\n     \"
              Create ACCOUNT with 0.0 balance, with GUARD controlling access.\"\n     )\n\n   "}}},"module":{"namespace":null,"name":"fungible-v2"},"meta":{"model":[],"docs":"
              Create ACCOUNT with 0.0 balance, with GUARD controlling access."},"info":{"d":[160,3691,3691],"c":"(defun
              create-account:string\n     ( account:string\n       guard:guard\n     )\n     \"
              Create ACCOUNT with 0.0 balance, with GUARD controlling access.\"\n     )\n\n   "}}},"precision":{"ref":{"defType":"Defun","defMeta":null,"funType":{"args":[],"return":"integer"},"defName":"precision","defBody":{"scope":{"list":[],"type":"*","i":{"d":[97,3474,3474],"c":"(defun
              precision:integer\n     ()\n     \"Return the maximum allowed decimal
              precision.\"\n     )\n\n   "}}},"module":{"namespace":null,"name":"fungible-v2"},"meta":{"model":[],"docs":"Return
              the maximum allowed decimal precision."},"info":{"d":[97,3474,3474],"c":"(defun
              precision:integer\n     ()\n     \"Return the maximum allowed decimal
              precision.\"\n     )\n\n   "}}},"transfer-create":{"ref":{"defType":"Defun","defMeta":null,"funType":{"args":[{"name":"sender","type":"string","info":{"d":[6,1543,1543],"c":"sender"}},{"name":"receiver","type":"string","info":{"d":[8,1564,1564],"c":"receiver"}},{"name":"receiver-guard","type":{"guard":null},"info":{"d":[14,1587,1587],"c":"receiver-guard"}},{"name":"amount","type":"decimal","info":{"d":[6,1615,1615],"c":"amount"}}],"return":"string"},"defName":"transfer-create","defBody":{"scope":{"list":[],"type":"*","i":{"d":[656,1506,1506],"c":"(defun
              transfer-create:string\n     ( sender:string\n       receiver:string\n       receiver-guard:guard\n       amount:decimal\n     )\n     @doc
              \" Transfer AMOUNT between accounts SENDER and RECEIVER. \\\n          \\
              Fails if SENDER does not exist. If RECEIVER exists, guard \\\n          \\
              must match existing value. If RECEIVER does not exist, \\\n          \\
              RECEIVER account is created using RECEIVER-GUARD. \\\n          \\ Subject
              to management by TRANSFER capability.\"\n     @model [ (property (>
              amount 0.0))\n              (property (!= sender \"\"))\n              (property
              (!= receiver \"\"))\n              (property (!= sender receiver))\n            ]\n     )\n\n   "}}},"module":{"namespace":null,"name":"fungible-v2"},"meta":{"model":[{"list":[{"atom":"property","q":[],"i":{"d":[9,1984,1984],"c":"property
              "}},{"list":[{"atom":">","q":[],"i":{"d":[2,1994,1994],"c":"> "}},{"atom":"amount","q":[],"i":{"d":[7,1996,1996],"c":"amount
              "}},{"i":{"d":[3,2003,2003],"c":"0.0"},"lit":0}],"d":"()","i":{"d":[14,1993,1993],"c":"(>
              amount 0.0)"}}],"d":"()","i":{"d":[40,1983,1983],"c":"(property (> amount
              0.0))\n              "}},{"list":[{"atom":"property","q":[],"i":{"d":[9,2024,2024],"c":"property
              "}},{"list":[{"atom":"!=","q":[],"i":{"d":[3,2034,2034],"c":"!= "}},{"atom":"sender","q":[],"i":{"d":[7,2037,2037],"c":"sender
              "}},{"i":{"d":[2,2044,2044],"c":"\"\""},"lit":""}],"d":"()","i":{"d":[14,2033,2033],"c":"(!=
              sender \"\")"}}],"d":"()","i":{"d":[40,2023,2023],"c":"(property (!=
              sender \"\"))\n              "}},{"list":[{"atom":"property","q":[],"i":{"d":[9,2064,2064],"c":"property
              "}},{"list":[{"atom":"!=","q":[],"i":{"d":[3,2074,2074],"c":"!= "}},{"atom":"receiver","q":[],"i":{"d":[9,2077,2077],"c":"receiver
              "}},{"i":{"d":[2,2086,2086],"c":"\"\""},"lit":""}],"d":"()","i":{"d":[16,2073,2073],"c":"(!=
              receiver \"\")"}}],"d":"()","i":{"d":[42,2063,2063],"c":"(property (!=
              receiver \"\"))\n              "}},{"list":[{"atom":"property","q":[],"i":{"d":[9,2106,2106],"c":"property
              "}},{"list":[{"atom":"!=","q":[],"i":{"d":[3,2116,2116],"c":"!= "}},{"atom":"sender","q":[],"i":{"d":[7,2119,2119],"c":"sender
              "}},{"atom":"receiver","q":[],"i":{"d":[8,2126,2126],"c":"receiver"}}],"d":"()","i":{"d":[20,2115,2115],"c":"(!=
              sender receiver)"}}],"d":"()","i":{"d":[44,2105,2105],"c":"(property
              (!= sender receiver))\n            "}}],"docs":" Transfer AMOUNT between
              accounts SENDER and RECEIVER.  Fails if SENDER does not exist. If RECEIVER
              exists, guard  must match existing value. If RECEIVER does not exist,  RECEIVER
              account is created using RECEIVER-GUARD.  Subject to management by TRANSFER
              capability."},"info":{"d":[656,1506,1506],"c":"(defun transfer-create:string\n     (
              sender:string\n       receiver:string\n       receiver-guard:guard\n       amount:decimal\n     )\n     @doc
              \" Transfer AMOUNT between accounts SENDER and RECEIVER. \\\n          \\
              Fails if SENDER does not exist. If RECEIVER exists, guard \\\n          \\
              must match existing value. If RECEIVER does not exist, \\\n          \\
              RECEIVER account is created using RECEIVER-GUARD. \\\n          \\ Subject
              to management by TRANSFER capability.\"\n     @model [ (property (>
              amount 0.0))\n              (property (!= sender \"\"))\n              (property
              (!= receiver \"\"))\n              (property (!= sender receiver))\n            ]\n     )\n\n   "}}},"details":{"ref":{"defType":"Defun","defMeta":null,"funType":{"args":[{"name":"account","type":"string","info":{"d":[7,3356,3356],"c":"account"}}],"return":{"schema":"object","type":{"var":{"ref":{"modname":{"namespace":null,"name":"fungible-v2"},"name":"account-details","meta":{"model":[{"list":[{"atom":"invariant","q":[],"i":{"d":[10,283,283],"c":"invariant
              "}},{"list":[{"atom":"!=","q":[],"i":{"d":[3,294,294],"c":"!= "}},{"i":{"d":[3,297,297],"c":"\"\"
              "},"lit":""},{"atom":"sender","q":[],"i":{"d":[6,300,300],"c":"sender"}}],"d":"()","i":{"d":[14,293,293],"c":"(!=
              \"\" sender)"}}],"d":"()","i":{"d":[27,282,282],"c":"(invariant (!=
              \"\" sender)) "}}],"docs":"Schema for results of ''account'' operation."},"i":{"d":[272,188,188],"c":"(defschema
              account-details\n    @doc \"Schema for results of ''account'' operation.\"\n    @model
              [ (invariant (!= \"\" sender)) ]\n\n    account:string\n    balance:decimal\n    guard:guard)\n\n\n   ;
              ----------------------------------------------------------------------\n   ;
              Caps\n\n   "},"fields":[{"name":"account","type":"string","info":{"d":[7,316,316],"c":"account"}},{"name":"balance","type":"decimal","info":{"d":[7,335,335],"c":"balance"}},{"name":"guard","type":{"guard":null},"info":{"d":[5,355,355],"c":"guard"}}]}},"i":{"d":[15,3332,3332],"c":"account-details"}},"partial":"full"}},"defName":"details","defBody":{"scope":{"list":[],"type":"*","i":{"d":[164,3310,3310],"c":"(defun
              details:object{account-details}\n     ( account: string )\n     \" Get
              an object with details of ACCOUNT. \\\n     \\ Fails if account does
              not exist.\"\n     )\n\n   "}}},"module":{"namespace":null,"name":"fungible-v2"},"meta":{"model":[],"docs":"
              Get an object with details of ACCOUNT.  Fails if account does not exist."},"info":{"d":[164,3310,3310],"c":"(defun
              details:object{account-details}\n     ( account: string )\n     \" Get
              an object with details of ACCOUNT. \\\n     \\ Fails if account does
              not exist.\"\n     )\n\n   "}}},"get-balance":{"ref":{"defType":"Defun","defMeta":null,"funType":{"args":[{"name":"account","type":"string","info":{"d":[7,3216,3216],"c":"account"}}],"return":"decimal"},"defName":"get-balance","defBody":{"scope":{"list":[],"type":"*","i":{"d":[128,3182,3182],"c":"(defun
              get-balance:decimal\n     ( account:string )\n     \" Get balance for
              ACCOUNT. Fails if account does not exist.\"\n     )\n\n   "}}},"module":{"namespace":null,"name":"fungible-v2"},"meta":{"model":[],"docs":"
              Get balance for ACCOUNT. Fails if account does not exist."},"info":{"d":[128,3182,3182],"c":"(defun
              get-balance:decimal\n     ( account:string )\n     \" Get balance for
              ACCOUNT. Fails if account does not exist.\"\n     )\n\n   "}}},"transfer-crosschain":{"ref":{"defType":"Defpact","defMeta":null,"funType":{"args":[{"name":"sender","type":"string","info":{"d":[6,2205,2205],"c":"sender"}},{"name":"receiver","type":"string","info":{"d":[8,2226,2226],"c":"receiver"}},{"name":"receiver-guard","type":{"guard":null},"info":{"d":[14,2249,2249],"c":"receiver-guard"}},{"name":"target-chain","type":"string","info":{"d":[12,2277,2277],"c":"target-chain"}},{"name":"amount","type":"decimal","info":{"d":[6,2304,2304],"c":"amount"}}],"return":"string"},"defName":"transfer-crosschain","defBody":{"scope":{"list":[],"type":"*","i":{"d":[1020,2162,2162],"c":"(defpact
              transfer-crosschain:string\n     ( sender:string\n       receiver:string\n       receiver-guard:guard\n       target-chain:string\n       amount:decimal\n     )\n     @doc
              \" 2-step pact to transfer AMOUNT from SENDER on current chain \\\n          \\
              to RECEIVER on TARGET-CHAIN via SPV proof. \\\n          \\ TARGET-CHAIN
              must be different than current chain id. \\\n          \\ First step
              debits AMOUNT coins in SENDER account and yields \\\n          \\ RECEIVER,
              RECEIVER_GUARD and AMOUNT to TARGET-CHAIN. \\\n          \\ Second step
              continuation is sent into TARGET-CHAIN with proof \\\n          \\ obtained
              from the spv ''output'' endpoint of Chainweb. \\\n          \\ Proof
              is validated and RECEIVER is credited with AMOUNT \\\n          \\ creating
              account with RECEIVER_GUARD as necessary.\"\n     @model [ (property
              (> amount 0.0))\n              (property (!= sender \"\"))\n              (property
              (!= receiver \"\"))\n              (property (!= sender receiver))\n              (property
              (!= target-chain \"\"))\n            ]\n     )\n\n   "}}},"module":{"namespace":null,"name":"fungible-v2"},"meta":{"model":[{"list":[{"atom":"property","q":[],"i":{"d":[9,2958,2958],"c":"property
              "}},{"list":[{"atom":">","q":[],"i":{"d":[2,2968,2968],"c":"> "}},{"atom":"amount","q":[],"i":{"d":[7,2970,2970],"c":"amount
              "}},{"i":{"d":[3,2977,2977],"c":"0.0"},"lit":0}],"d":"()","i":{"d":[14,2967,2967],"c":"(>
              amount 0.0)"}}],"d":"()","i":{"d":[40,2957,2957],"c":"(property (> amount
              0.0))\n              "}},{"list":[{"atom":"property","q":[],"i":{"d":[9,2998,2998],"c":"property
              "}},{"list":[{"atom":"!=","q":[],"i":{"d":[3,3008,3008],"c":"!= "}},{"atom":"sender","q":[],"i":{"d":[7,3011,3011],"c":"sender
              "}},{"i":{"d":[2,3018,3018],"c":"\"\""},"lit":""}],"d":"()","i":{"d":[14,3007,3007],"c":"(!=
              sender \"\")"}}],"d":"()","i":{"d":[40,2997,2997],"c":"(property (!=
              sender \"\"))\n              "}},{"list":[{"atom":"property","q":[],"i":{"d":[9,3038,3038],"c":"property
              "}},{"list":[{"atom":"!=","q":[],"i":{"d":[3,3048,3048],"c":"!= "}},{"atom":"receiver","q":[],"i":{"d":[9,3051,3051],"c":"receiver
              "}},{"i":{"d":[2,3060,3060],"c":"\"\""},"lit":""}],"d":"()","i":{"d":[16,3047,3047],"c":"(!=
              receiver \"\")"}}],"d":"()","i":{"d":[42,3037,3037],"c":"(property (!=
              receiver \"\"))\n              "}},{"list":[{"atom":"property","q":[],"i":{"d":[9,3080,3080],"c":"property
              "}},{"list":[{"atom":"!=","q":[],"i":{"d":[3,3090,3090],"c":"!= "}},{"atom":"sender","q":[],"i":{"d":[7,3093,3093],"c":"sender
              "}},{"atom":"receiver","q":[],"i":{"d":[8,3100,3100],"c":"receiver"}}],"d":"()","i":{"d":[20,3089,3089],"c":"(!=
              sender receiver)"}}],"d":"()","i":{"d":[46,3079,3079],"c":"(property
              (!= sender receiver))\n              "}},{"list":[{"atom":"property","q":[],"i":{"d":[9,3126,3126],"c":"property
              "}},{"list":[{"atom":"!=","q":[],"i":{"d":[3,3136,3136],"c":"!= "}},{"atom":"target-chain","q":[],"i":{"d":[13,3139,3139],"c":"target-chain
              "}},{"i":{"d":[2,3152,3152],"c":"\"\""},"lit":""}],"d":"()","i":{"d":[20,3135,3135],"c":"(!=
              target-chain \"\")"}}],"d":"()","i":{"d":[44,3125,3125],"c":"(property
              (!= target-chain \"\"))\n            "}}],"docs":" 2-step pact to transfer
              AMOUNT from SENDER on current chain  to RECEIVER on TARGET-CHAIN via
              SPV proof.  TARGET-CHAIN must be different than current chain id.  First
              step debits AMOUNT coins in SENDER account and yields  RECEIVER, RECEIVER_GUARD
              and AMOUNT to TARGET-CHAIN.  Second step continuation is sent into TARGET-CHAIN
              with proof  obtained from the spv ''output'' endpoint of Chainweb.  Proof
              is validated and RECEIVER is credited with AMOUNT  creating account
              with RECEIVER_GUARD as necessary."},"info":{"d":[1020,2162,2162],"c":"(defpact
              transfer-crosschain:string\n     ( sender:string\n       receiver:string\n       receiver-guard:guard\n       target-chain:string\n       amount:decimal\n     )\n     @doc
              \" 2-step pact to transfer AMOUNT from SENDER on current chain \\\n          \\
              to RECEIVER on TARGET-CHAIN via SPV proof. \\\n          \\ TARGET-CHAIN
              must be different than current chain id. \\\n          \\ First step
              debits AMOUNT coins in SENDER account and yields \\\n          \\ RECEIVER,
              RECEIVER_GUARD and AMOUNT to TARGET-CHAIN. \\\n          \\ Second step
              continuation is sent into TARGET-CHAIN with proof \\\n          \\ obtained
              from the spv ''output'' endpoint of Chainweb. \\\n          \\ Proof
              is validated and RECEIVER is credited with AMOUNT \\\n          \\ creating
              account with RECEIVER_GUARD as necessary.\"\n     @model [ (property
              (> amount 0.0))\n              (property (!= sender \"\"))\n              (property
              (!= receiver \"\"))\n              (property (!= sender receiver))\n              (property
              (!= target-chain \"\"))\n            ]\n     )\n\n   "}}},"TRANSFER":{"ref":{"defType":"Defcap","defMeta":{"managedParam":"amount","managerFun":{"var":{"ref":{"defType":"Defun","defMeta":null,"funType":{"args":[{"name":"managed","type":"decimal","info":{"d":[7,780,780],"c":"managed"}},{"name":"requested","type":"decimal","info":{"d":[9,803,803],"c":"requested"}}],"return":"decimal"},"defName":"TRANSFER-mgr","defBody":{"scope":{"list":[],"type":"*","i":{"d":[352,745,745],"c":"(defun
              TRANSFER-mgr:decimal\n     ( managed:decimal\n       requested:decimal\n     )\n     @doc
              \" Manages TRANSFER AMOUNT linearly, \\\n          \\ such that a request
              for 1.0 amount on a 3.0 \\\n          \\ managed quantity emits updated
              amount 2.0.\"\n     )\n\n   ; ----------------------------------------------------------------------\n   ;
              Functionality\n\n\n  "}}},"module":{"namespace":null,"name":"fungible-v2"},"meta":{"model":[],"docs":"
              Manages TRANSFER AMOUNT linearly,  such that a request for 1.0 amount
              on a 3.0  managed quantity emits updated amount 2.0."},"info":{"d":[352,745,745],"c":"(defun
              TRANSFER-mgr:decimal\n     ( managed:decimal\n       requested:decimal\n     )\n     @doc
              \" Manages TRANSFER AMOUNT linearly, \\\n          \\ such that a request
              for 1.0 amount on a 3.0 \\\n          \\ managed quantity emits updated
              amount 2.0.\"\n     )\n\n   ; ----------------------------------------------------------------------\n   ;
              Functionality\n\n\n  "}}},"i":{"d":[18,721,721],"c":"TRANSFER-mgr\n     "}}},"funType":{"args":[{"name":"sender","type":"string","info":{"d":[6,489,489],"c":"sender"}},{"name":"receiver","type":"string","info":{"d":[8,510,510],"c":"receiver"}},{"name":"amount","type":"decimal","info":{"d":[6,533,533],"c":"amount"}}],"return":"bool"},"defName":"TRANSFER","defBody":{"scope":{"list":[],"type":"*","i":{"d":[285,460,460],"c":"(defcap
              TRANSFER:bool\n     ( sender:string\n       receiver:string\n       amount:decimal\n     )\n     @doc
              \" Managed capability sealing AMOUNT for transfer from SENDER to \\\n          \\
              RECEIVER. Permits any number of transfers up to AMOUNT.\"\n     @managed
              amount TRANSFER-mgr\n     )\n\n   "}}},"module":{"namespace":null,"name":"fungible-v2"},"meta":{"model":[],"docs":"
              Managed capability sealing AMOUNT for transfer from SENDER to  RECEIVER.
              Permits any number of transfers up to AMOUNT."},"info":{"d":[285,460,460],"c":"(defcap
              TRANSFER:bool\n     ( sender:string\n       receiver:string\n       amount:decimal\n     )\n     @doc
              \" Managed capability sealing AMOUNT for transfer from SENDER to \\\n          \\
              RECEIVER. Permits any number of transfers up to AMOUNT.\"\n     @managed
              amount TRANSFER-mgr\n     )\n\n   "}}},"transfer":{"ref":{"defType":"Defun","defMeta":null,"funType":{"args":[{"name":"sender","type":"string","info":{"d":[6,1126,1126],"c":"sender"}},{"name":"receiver","type":"string","info":{"d":[8,1146,1146],"c":"receiver"}},{"name":"amount","type":"decimal","info":{"d":[6,1168,1168],"c":"amount"}}],"return":"string"},"defName":"transfer","defBody":{"scope":{"list":[],"type":"*","i":{"d":[409,1097,1097],"c":"(defun
              transfer:string\n    ( sender:string\n      receiver:string\n      amount:decimal\n    )\n    @doc
              \" Transfer AMOUNT between accounts SENDER and RECEIVER. \\\n         \\
              Fails if either SENDER or RECEIVER does not exist.\"\n    @model [ (property
              (> amount 0.0))\n             (property (!= sender \"\"))\n             (property
              (!= receiver \"\"))\n             (property (!= sender receiver))\n           ]\n    )\n\n   "}}},"module":{"namespace":null,"name":"fungible-v2"},"meta":{"model":[{"list":[{"atom":"property","q":[],"i":{"d":[9,1333,1333],"c":"property
              "}},{"list":[{"atom":">","q":[],"i":{"d":[2,1343,1343],"c":"> "}},{"atom":"amount","q":[],"i":{"d":[7,1345,1345],"c":"amount
              "}},{"i":{"d":[3,1352,1352],"c":"0.0"},"lit":0}],"d":"()","i":{"d":[14,1342,1342],"c":"(>
              amount 0.0)"}}],"d":"()","i":{"d":[39,1332,1332],"c":"(property (> amount
              0.0))\n             "}},{"list":[{"atom":"property","q":[],"i":{"d":[9,1372,1372],"c":"property
              "}},{"list":[{"atom":"!=","q":[],"i":{"d":[3,1382,1382],"c":"!= "}},{"atom":"sender","q":[],"i":{"d":[7,1385,1385],"c":"sender
              "}},{"i":{"d":[2,1392,1392],"c":"\"\""},"lit":""}],"d":"()","i":{"d":[14,1381,1381],"c":"(!=
              sender \"\")"}}],"d":"()","i":{"d":[39,1371,1371],"c":"(property (!=
              sender \"\"))\n             "}},{"list":[{"atom":"property","q":[],"i":{"d":[9,1411,1411],"c":"property
              "}},{"list":[{"atom":"!=","q":[],"i":{"d":[3,1421,1421],"c":"!= "}},{"atom":"receiver","q":[],"i":{"d":[9,1424,1424],"c":"receiver
              "}},{"i":{"d":[2,1433,1433],"c":"\"\""},"lit":""}],"d":"()","i":{"d":[16,1420,1420],"c":"(!=
              receiver \"\")"}}],"d":"()","i":{"d":[41,1410,1410],"c":"(property (!=
              receiver \"\"))\n             "}},{"list":[{"atom":"property","q":[],"i":{"d":[9,1452,1452],"c":"property
              "}},{"list":[{"atom":"!=","q":[],"i":{"d":[3,1462,1462],"c":"!= "}},{"atom":"sender","q":[],"i":{"d":[7,1465,1465],"c":"sender
              "}},{"atom":"receiver","q":[],"i":{"d":[8,1472,1472],"c":"receiver"}}],"d":"()","i":{"d":[20,1461,1461],"c":"(!=
              sender receiver)"}}],"d":"()","i":{"d":[43,1451,1451],"c":"(property
              (!= sender receiver))\n           "}}],"docs":" Transfer AMOUNT between
              accounts SENDER and RECEIVER.  Fails if either SENDER or RECEIVER does
              not exist."},"info":{"d":[409,1097,1097],"c":"(defun transfer:string\n    (
              sender:string\n      receiver:string\n      amount:decimal\n    )\n    @doc
              \" Transfer AMOUNT between accounts SENDER and RECEIVER. \\\n         \\
              Fails if either SENDER or RECEIVER does not exist.\"\n    @model [ (property
              (> amount 0.0))\n             (property (!= sender \"\"))\n             (property
              (!= receiver \"\"))\n             (property (!= sender receiver))\n           ]\n    )\n\n   "}}},"TRANSFER-mgr":{"ref":{"defType":"Defun","defMeta":null,"funType":{"args":[{"name":"managed","type":"decimal","info":{"d":[7,780,780],"c":"managed"}},{"name":"requested","type":"decimal","info":{"d":[9,803,803],"c":"requested"}}],"return":"decimal"},"defName":"TRANSFER-mgr","defBody":{"scope":{"list":[],"type":"*","i":{"d":[352,745,745],"c":"(defun
              TRANSFER-mgr:decimal\n     ( managed:decimal\n       requested:decimal\n     )\n     @doc
              \" Manages TRANSFER AMOUNT linearly, \\\n          \\ such that a request
              for 1.0 amount on a 3.0 \\\n          \\ managed quantity emits updated
              amount 2.0.\"\n     )\n\n   ; ----------------------------------------------------------------------\n   ;
              Functionality\n\n\n  "}}},"module":{"namespace":null,"name":"fungible-v2"},"meta":{"model":[],"docs":"
              Manages TRANSFER AMOUNT linearly,  such that a request for 1.0 amount
              on a 3.0  managed quantity emits updated amount 2.0."},"info":{"d":[352,745,745],"c":"(defun
              TRANSFER-mgr:decimal\n     ( managed:decimal\n       requested:decimal\n     )\n     @doc
              \" Manages TRANSFER AMOUNT linearly, \\\n          \\ such that a request
              for 1.0 amount on a 3.0 \\\n          \\ managed quantity emits updated
              amount 2.0.\"\n     )\n\n   ; ----------------------------------------------------------------------\n   ;
              Functionality\n\n\n  "}}},"account-details":{"ref":{"modname":{"namespace":null,"name":"fungible-v2"},"name":"account-details","meta":{"model":[{"list":[{"atom":"invariant","q":[],"i":{"d":[10,283,283],"c":"invariant
              "}},{"list":[{"atom":"!=","q":[],"i":{"d":[3,294,294],"c":"!= "}},{"i":{"d":[3,297,297],"c":"\"\"
              "},"lit":""},{"atom":"sender","q":[],"i":{"d":[6,300,300],"c":"sender"}}],"d":"()","i":{"d":[14,293,293],"c":"(!=
              \"\" sender)"}}],"d":"()","i":{"d":[27,282,282],"c":"(invariant (!=
              \"\" sender)) "}}],"docs":"Schema for results of ''account'' operation."},"i":{"d":[272,188,188],"c":"(defschema
              account-details\n    @doc \"Schema for results of ''account'' operation.\"\n    @model
              [ (invariant (!= \"\" sender)) ]\n\n    account:string\n    balance:decimal\n    guard:guard)\n\n\n   ;
              ----------------------------------------------------------------------\n   ;
              Caps\n\n   "},"fields":[{"name":"account","type":"string","info":{"d":[7,316,316],"c":"account"}},{"name":"balance","type":"decimal","info":{"d":[7,335,335],"c":"balance"}},{"name":"guard","type":{"guard":null},"info":{"d":[5,355,355],"c":"guard"}}]}},"rotate":{"ref":{"defType":"Defun","defMeta":null,"funType":{"args":[{"name":"account","type":"string","info":{"d":[7,3879,3879],"c":"account"}},{"name":"new-guard","type":{"guard":null},"info":{"d":[9,3901,3901],"c":"new-guard"}}],"return":"string"},"defName":"rotate","defBody":{"scope":{"list":[],"type":"*","i":{"d":[202,3851,3851],"c":"(defun
              rotate:string\n     ( account:string\n       new-guard:guard\n     )\n     \"
              Rotate guard for ACCOUNT. Transaction is validated against \\\n     \\
              existing guard before installing new guard. \"\n     )\n\n"}}},"module":{"namespace":null,"name":"fungible-v2"},"meta":{"model":[],"docs":"
              Rotate guard for ACCOUNT. Transaction is validated against  existing
              guard before installing new guard. "},"info":{"d":[202,3851,3851],"c":"(defun
              rotate:string\n     ( account:string\n       new-guard:guard\n     )\n     \"
              Rotate guard for ACCOUNT. Transaction is validated against \\\n     \\
              existing guard before installing new guard. \"\n     )\n\n"}}}}}'
      SYS:Pacts:
      - - PactId "w2xTGIy73x8XLCGhRWrrwYeyMdaMuL-s9jPO_xS3r8ktYnV5Z2Fz"
        - - - 18
            - 'null'
          - - 16
            - '{"executed":null,"pactId":"w2xTGIy73x8XLCGhRWrrwYeyMdaMuL-s9jPO_xS3r8ktYnV5Z2Fz","stepHasRollback":false,"step":0,"yield":null,"continuation":{"args":["sender00","NoMiner",{"pred":"<","keys":[]},100],"def":"coin.fund-tx"},"stepCount":2}'
      coin_coin-table:
      - - NoMiner
        - - - 42
            - '{"guard":{"pred":"<","keys":[]},"balance":21.884523}'
          - - 39
            - '{"guard":{"pred":"<","keys":[]},"balance":21.804523}'
          - - 36
            - '{"guard":{"pred":"<","keys":[]},"balance":21.724523}'
          - - 33
            - '{"guard":{"pred":"<","keys":[]},"balance":21.644523}'
          - - 30
            - '{"guard":{"pred":"<","keys":[]},"balance":21.564523}'
          - - 27
            - '{"guard":{"pred":"<","keys":[]},"balance":21.484523}'
          - - 24
            - '{"guard":{"pred":"<","keys":[]},"balance":21.404523}'
          - - 21
            - '{"guard":{"pred":"<","keys":[]},"balance":21.324523}'
          - - 18
            - '{"guard":{"pred":"<","keys":[]},"balance":17.254523}'
          - - 15
            - '{"guard":{"pred":"<","keys":[]},"balance":11.444523}'
          - - 12
            - '{"guard":{"pred":"<","keys":[]},"balance":8.794523}'
          - - 7
            - '{"guard":{"pred":"<","keys":[]},"balance":2.304523}'
      free.test1_accounts:
      - - Acct1
        - - - 20
            - '{"amount":-1,"data":{"transfer-to":"Acct2"},"balance":999999}'
          - - 17
            - '{"amount":1000000,"data":"Created account","balance":1000000}'
  txId: 43
results:
  coinbase: eyJnYXMiOjAsInJlc3VsdCI6eyJzdGF0dXMiOiJzdWNjZXNzIiwiZGF0YSI6IldyaXRlIHN1Y2NlZWRlZCJ9LCJyZXFLZXkiOiJJbXRNTUVWWWEyc3lkMlJrVFZkeU1sRkJUVU5YUkRaelFqZHBNR3hPVTFZM2VGWm5XSGN5YWxBelNFMGkiLCJsb2dzIjoibFdaVWZjX0dKdGxUUy1LeDAtYm00aXRfSWE5bnNGZG5jZ2NwSE0td091OCIsIm1ldGFEYXRhIjpudWxsLCJjb250aW51YXRpb24iOm51bGwsInR4SWQiOjd9
  minerData: eyJhY2NvdW50IjoiTm9NaW5lciIsInByZWRpY2F0ZSI6IjwiLCJwdWJsaWMta2V5cyI6W119
  outputsHash: oh0ZsBr60JGxL41VpPKW2zL5RXztLbYvKsHtdO8AgB8
  payloadHash: EnDoblnPIEO9eDOjHz1P8nYdziWg91F6-dfibI69sQE
  transactions:
  - - eyJoYXNoIjoiSzhiZVo0andPZlJWVXlnanBRbmI0cTg3YXYtdUpoNTNwRFFSWEVOZ3ZMOCIsInNpZ3MiOlt7InNpZyI6IjU2NzUxZjI3ZDQxM2I0MTMxMGRmYjdmM2NmZTYyN2UxZDgxOWZkMmEyNGE4OTkyZTQ2YmY2MTkzMzVmY2I4OWIwMzY1ZjY3MTU2ZGRlNzJlZGU1OTVjNTcyMDk4OGI3NjI5NGFkMjk3NGM3NWEwM2E3MDQ4NzQxN2VhZTc2MTAzIn1dLCJjbWQiOiJ7XCJuZXR3b3JrSWRcIjpcInNsb3dmb3JrLUNQTS1wZXRlcnNvblwiLFwicGF5bG9hZFwiOntcImV4ZWNcIjp7XCJkYXRhXCI6e1widGVzdC1hZG1pbi1rZXlzZXRcIjpbXCIzNjg4MjBmODBjMzI0YmJjN2MyYjA2MTA2ODhhN2RhNDNlMzlmOTFkMTE4NzMyNjcxY2Q5Yzc1MDBmZjQzY2NhXCJdfSxcImNvZGVcIjpcIihkZWZpbmUta2V5c2V0ICd0ZXN0LWFkbWluIChyZWFkLWtleXNldCBcXFwidGVzdC1hZG1pbi1rZXlzZXRcXFwiKSlcXG5cXG4obmFtZXNwYWNlICdmcmVlKVxcblxcbihtb2R1bGUgdGVzdDEgJ3Rlc3QtYWRtaW5cXG5cXG4gIChkZWZzY2hlbWEgYWNjb3VudFxcbiAgICBiYWxhbmNlOmRlY2ltYWxcXG4gICAgYW1vdW50OmRlY2ltYWxcXG4gICAgZGF0YSlcXG5cXG4gIChkZWZ0YWJsZSBhY2NvdW50czp7YWNjb3VudH0pXFxuXFxuICAoZGVmdW4gY3JlYXRlLWFjY291bnQgKGlkIGluaXQtYmFsKVxcbiAgICAoaW5zZXJ0IGFjY291bnRzIGlkXFxuICAgICAgICAgeyBcXFwiYmFsYW5jZVxcXCI6IGluaXQtYmFsLCBcXFwiYW1vdW50XFxcIjogaW5pdC1iYWwsIFxcXCJkYXRhXFxcIjogXFxcIkNyZWF0ZWQgYWNjb3VudFxcXCIgfSkpXFxuXFxuICAoZGVmdW4gdHJhbnNmZXIgKHNyYyBkZXN0IGFtb3VudClcXG4gICAgXFxcInRyYW5zZmVyIEFNT1VOVCBmcm9tIFNSQyB0byBERVNUIGZvciB1bmVuY3J5cHRlZCBhY2NvdW50c1xcXCJcXG4gICAgKGRlYml0IHNyYyBhbW91bnQgeyBcXFwidHJhbnNmZXItdG9cXFwiOiBkZXN0IH0pXFxuICAgIChjcmVkaXQgZGVzdCBhbW91bnQgeyBcXFwidHJhbnNmZXItZnJvbVxcXCI6IHNyYyB9KSlcXG5cXG4gIChkZWZwYWN0IHBheW1lbnQgKHNyYy1lbnRpdHkgc3JjIGRlc3QtZW50aXR5IGRlc3QgYW1vdW50KVxcbiAgICBcXFwiVHdvLXBoYXNlIGNvbmZpZGVudGlhbCBwYXltZW50LCBzZW5kaW5nIG1vbmV5IGZyb20gU1JDIGF0IFNSQy1FTlRJVFkgdG8gREVTVCBhdCBERVNULUVOVElUWS5cXFwiXFxuXFxuICAgIChzdGVwLXdpdGgtcm9sbGJhY2tcXG4gICAgIHNyYy1lbnRpdHlcXG4gICAgIChsZXQgKChyZXN1bHQgKGRlYml0IHNyYyBhbW91bnQgeyBcXFwidHJhbnNmZXItdG9cXFwiOiBkZXN0LCBcXFwibWVzc2FnZVxcXCI6IFxcXCJTdGFydGluZyBwYWN0XFxcIiB9KSkpXFxuICAgICAgICh5aWVsZCB7IFxcXCJyZXN1bHRcXFwiOiByZXN1bHQsIFxcXCJhbW91bnRcXFwiOiBhbW91bnQsIFxcXCJ0eFxcXCI6IChwYWN0LWlkKSB9KSlcXG4gICAgIChjcmVkaXQgc3JjIGFtb3VudCB7IFxcXCJyb2xsYmFja1xcXCI6IChwYWN0LWlkKSB9KSlcXG5cXG4gICAgKHN0ZXBcXG4gICAgIGRlc3QtZW50aXR5XFxuICAgICAocmVzdW1lIHsgXFxcInJlc3VsdFxcXCI6PSByZXN1bHQsIFxcXCJhbW91bnRcXFwiOj0gZGViaXQtYW1vdW50IH1cXG4gICAgICAgKGNyZWRpdCBkZXN0IGRlYml0LWFtb3VudFxcbiAgICAgICAgICAgICAgIHsgXFxcInRyYW5zZmVyLWZyb21cXFwiOiBzcmMsIFxcXCJkZWJpdC1yZXN1bHRcXFwiOiByZXN1bHQsIFxcXCJ0eFxcXCI6IChwYWN0LWlkKSB9KSkpKVxcblxcbiAgKGRlZnVuIGRlYml0IChhY2N0IGFtb3VudCBkYXRhKVxcbiAgICBcXFwiRGViaXQgQUNDVCBmb3IgQU1PVU5ULCBlbmZvcmNpbmcgcG9zaXRpdmUgYW1vdW50IGFuZCBzdWZmaWNpZW50IGZ1bmRzLCBhbm5vdGF0aW5nIHdpdGggREFUQVxcXCJcXG4gICAgKGVuZm9yY2UtcG9zaXRpdmUgYW1vdW50KVxcbiAgICAod2l0aC1yZWFkIGFjY291bnRzIGFjY3QgeyBcXFwiYmFsYW5jZVxcXCI6PSBiYWxhbmNlIH1cXG4gICAgICAoY2hlY2stYmFsYW5jZSBiYWxhbmNlIGFtb3VudClcXG4gICAgICAodXBkYXRlIGFjY291bnRzIGFjY3RcXG4gICAgICAgICAgICB7IFxcXCJiYWxhbmNlXFxcIjogKC0gYmFsYW5jZSBhbW91bnQpLCBcXFwiYW1vdW50XFxcIjogKC0gYW1vdW50KVxcbiAgICAgICAgICAgICwgXFxcImRhdGFcXFwiOiBkYXRhIH0pKSlcXG5cXG4gIChkZWZ1biBjcmVkaXQgKGFjY3QgYW1vdW50IGRhdGEpXFxuICAgIFxcXCJDcmVkaXQgQUNDVCBmb3IgQU1PVU5ULCBlbmZvcmNpbmcgcG9zaXRpdmUgYW1vdW50XFxcIlxcbiAgICAoZW5mb3JjZS1wb3NpdGl2ZSBhbW91bnQpXFxuICAgICh3aXRoLXJlYWQgYWNjb3VudHMgYWNjdCB7IFxcXCJiYWxhbmNlXFxcIjo9IGJhbGFuY2UgfVxcbiAgICAgICh1cGRhdGUgYWNjb3VudHMgYWNjdFxcbiAgICAgICAgICAgIHsgXFxcImJhbGFuY2VcXFwiOiAoKyBiYWxhbmNlIGFtb3VudCksIFxcXCJhbW91bnRcXFwiOiBhbW91bnRcXG4gICAgICAgICAgICAsIFxcXCJkYXRhXFxcIjogZGF0YSB9KSkpXFxuXFxuXFxuICAoZGVmdW4gcmVhZC1hY2NvdW50IChpZClcXG4gICAgXFxcIlJlYWQgZGF0YSBmb3IgYWNjb3VudCBJRFxcXCJcXG4gICAgKCsgeyBcXFwiYWNjb3VudFxcXCI6IGlkIH0gKHJlYWQgYWNjb3VudHMgaWQpKSlcXG5cXG4gIChkZWZ1biBjaGVjay1iYWxhbmNlIChiYWxhbmNlIGFtb3VudClcXG4gICAgKGVuZm9yY2UgKDw9IGFtb3VudCBiYWxhbmNlKSBcXFwiSW5zdWZmaWNpZW50IGZ1bmRzXFxcIikpXFxuXFxuICAoZGVmdW4gZW5mb3JjZS1wb3NpdGl2ZSAoYW1vdW50KVxcbiAgICAoZW5mb3JjZSAoPj0gYW1vdW50IDAuMCkgXFxcImFtb3VudCBtdXN0IGJlIHBvc2l0aXZlXFxcIikpXFxuXFxuIChkZWZ1biByZWFkLWFsbCAoKVxcbiAgIChtYXAgKHJlYWQtYWNjb3VudCkgKGtleXMgYWNjb3VudHMpKSlcXG5cXG4gKGRlZnVuIHJlYWQtYWxsLWdsb2JhbCAoKVxcbiAgIChtYXAgKHJlYWQtYWNjb3VudCkgW1xcXCJBY2N0MVxcXCIgXFxcIkFjY3QyXFxcIl0pKVxcblxcbiAoZGVmdW4gY3JlYXRlLWdsb2JhbC1hY2NvdW50cyAoKVxcbiAgIChjcmVhdGUtYWNjb3VudCBcXFwiQWNjdDFcXFwiIDEwMDAwMDAuMClcXG4gICAoY3JlYXRlLWFjY291bnQgXFxcIkFjY3QyXFxcIiAwLjApXFxuICAgKHJlYWQtYWxsKSlcXG5cXG4gKGRlZnBhY3QgY3JlYXRlLXByaXZhdGUtYWNjb3VudHMgKClcXG4gICAoc3RlcCBcXFwiQWxpY2VcXFwiIChjcmVhdGUtYWNjb3VudCBcXFwiQVxcXCIgMTAwMC4wKSlcXG4gICAoc3RlcCBcXFwiQm9iXFxcIiAoY3JlYXRlLWFjY291bnQgXFxcIkJcXFwiIDEwMDAuMCkpXFxuICAgKHN0ZXAgXFxcIkNhcm9sXFxcIiAoY3JlYXRlLWFjY291bnQgXFxcIkNcXFwiIDEwMDAuMCkpXFxuICAgKHN0ZXAgXFxcIkRpbmVzaFxcXCIgKGNyZWF0ZS1hY2NvdW50IFxcXCJEXFxcIiAxMDAwLjApKSlcXG5cXG4pXFxuXCJ9fSxcInNpZ25lcnNcIjpbe1wicHViS2V5XCI6XCIzNjg4MjBmODBjMzI0YmJjN2MyYjA2MTA2ODhhN2RhNDNlMzlmOTFkMTE4NzMyNjcxY2Q5Yzc1MDBmZjQzY2NhXCJ9XSxcIm1ldGFcIjp7XCJjcmVhdGlvblRpbWVcIjowLFwidHRsXCI6MTAwMDAwMCxcImdhc0xpbWl0XCI6MTAwMDAsXCJjaGFpbklkXCI6XCIwXCIsXCJnYXNQcmljZVwiOjEuMGUtMixcInNlbmRlclwiOlwic2VuZGVyMDBcIn0sXCJub25jZVwiOlwiMTBcIn0ifQ
    - eyJnYXMiOjY0OSwicmVzdWx0Ijp7InN0YXR1cyI6InN1Y2Nlc3MiLCJkYXRhIjoiTG9hZGVkIG1vZHVsZSBmcmVlLnRlc3QxLCBoYXNoIEI2WkpnZldENW9iUEdtWWNfaVJLaXJETVA2LVVHbTJwVVY3bXRIRC1Sc1EifSwicmVxS2V5IjoiSzhiZVo0andPZlJWVXlnanBRbmI0cTg3YXYtdUpoNTNwRFFSWEVOZ3ZMOCIsImxvZ3MiOiJXc2hfempnODdSTUxBaXlkYTFmNFRsM2tCQnMwNm92RHNpS2xTRlNvMnVJIiwibWV0YURhdGEiOm51bGwsImNvbnRpbnVhdGlvbiI6bnVsbCwidHhJZCI6MTF9
  - - eyJoYXNoIjoicEVqZ1VLbGVSWHFxby13azNLTzBWeGNScVg5Vmtua0ZCYmhPQndfZUNzdyIsInNpZ3MiOlt7InNpZyI6Ijk4OGU3OThjZGU5MmFjYjJhZGM4YWJhOTZkNzc3MWI0ZDUxMmQ2OWM0ZTgxOGIwMTMxNzQ4Mzk0NzQ4YjhmMDRkM2Q1MjQyMTNhMjJiZGVlZDMzYmMzNTFlN2ZiMjc4ZGU0YTM1YzMzMjhkYTZhNDdkMGJjYTgyNTJlNDkxYjA5In1dLCJjbWQiOiJ7XCJuZXR3b3JrSWRcIjpcInNsb3dmb3JrLUNQTS1wZXRlcnNvblwiLFwicGF5bG9hZFwiOntcImV4ZWNcIjp7XCJkYXRhXCI6e1widGVzdC1hZG1pbi1rZXlzZXRcIjpbXCIzNjg4MjBmODBjMzI0YmJjN2MyYjA2MTA2ODhhN2RhNDNlMzlmOTFkMTE4NzMyNjcxY2Q5Yzc1MDBmZjQzY2NhXCJdfSxcImNvZGVcIjpcIihjcmVhdGUtdGFibGUgZnJlZS50ZXN0MS5hY2NvdW50cylcIn19LFwic2lnbmVyc1wiOlt7XCJwdWJLZXlcIjpcIjM2ODgyMGY4MGMzMjRiYmM3YzJiMDYxMDY4OGE3ZGE0M2UzOWY5MWQxMTg3MzI2NzFjZDljNzUwMGZmNDNjY2FcIn1dLFwibWV0YVwiOntcImNyZWF0aW9uVGltZVwiOjAsXCJ0dGxcIjoxMDAwMDAwLFwiZ2FzTGltaXRcIjoxMDAwMCxcImNoYWluSWRcIjpcIjBcIixcImdhc1ByaWNlXCI6MS4wZS0yLFwic2VuZGVyXCI6XCJzZW5kZXIwMFwifSxcIm5vbmNlXCI6XCIxMVwifSJ9
    - eyJnYXMiOjI2NSwicmVzdWx0Ijp7InN0YXR1cyI6InN1Y2Nlc3MiLCJkYXRhIjoiVGFibGVDcmVhdGVkIn0sInJlcUtleSI6InBFamdVS2xlUlhxcW8td2szS08wVnhjUnFYOVZrbmtGQmJoT0J3X2VDc3ciLCJsb2dzIjoiUU9sempuT2Y1TDJ5dm1tNHk5NE5LU2VvSkVUaUVWZ281MGN6amhNMDVHTSIsIm1ldGFEYXRhIjpudWxsLCJjb250aW51YXRpb24iOm51bGwsInR4SWQiOjE0fQ
  - - eyJoYXNoIjoidzJ4VEdJeTczeDhYTENHaFJXcnJ3WWV5TWRhTXVMLXM5alBPX3hTM3I4ayIsInNpZ3MiOlt7InNpZyI6ImYwNTA3N2RhNGU4NDM4NDBiMjA3OTI5MjFkMTMxYTg1NzgxZWU5ZmU1YzZiNTY5MDhhY2M3MDA0OGM2YmY0NWQxMzBlNTk2NTJhMmU2ZGM1MDg0ZjhlMTAzNjU4NGNmOGU5NGYwZjZjMTVlZGQ4YWYxZmM3ODc5ZWQ1N2JmZjA0In1dLCJjbWQiOiJ7XCJuZXR3b3JrSWRcIjpcInNsb3dmb3JrLUNQTS1wZXRlcnNvblwiLFwicGF5bG9hZFwiOntcImV4ZWNcIjp7XCJkYXRhXCI6e1widGVzdC1hZG1pbi1rZXlzZXRcIjpbXCIzNjg4MjBmODBjMzI0YmJjN2MyYjA2MTA2ODhhN2RhNDNlMzlmOTFkMTE4NzMyNjcxY2Q5Yzc1MDBmZjQzY2NhXCJdfSxcImNvZGVcIjpcIihmcmVlLnRlc3QxLmNyZWF0ZS1nbG9iYWwtYWNjb3VudHMpXCJ9fSxcInNpZ25lcnNcIjpbe1wicHViS2V5XCI6XCIzNjg4MjBmODBjMzI0YmJjN2MyYjA2MTA2ODhhN2RhNDNlMzlmOTFkMTE4NzMyNjcxY2Q5Yzc1MDBmZjQzY2NhXCJ9XSxcIm1ldGFcIjp7XCJjcmVhdGlvblRpbWVcIjowLFwidHRsXCI6MTAwMDAwMCxcImdhc0xpbWl0XCI6MTAwMDAsXCJjaGFpbklkXCI6XCIwXCIsXCJnYXNQcmljZVwiOjEuMGUtMixcInNlbmRlclwiOlwic2VuZGVyMDBcIn0sXCJub25jZVwiOlwiMTJcIn0ifQ
    - eyJnYXMiOjU4MSwicmVzdWx0Ijp7InN0YXR1cyI6InN1Y2Nlc3MiLCJkYXRhIjpbeyJhbW91bnQiOjEwMDAwMDAsImRhdGEiOiJDcmVhdGVkIGFjY291bnQiLCJiYWxhbmNlIjoxMDAwMDAwLCJhY2NvdW50IjoiQWNjdDEifSx7ImFtb3VudCI6MCwiZGF0YSI6IkNyZWF0ZWQgYWNjb3VudCIsImJhbGFuY2UiOjAsImFjY291bnQiOiJBY2N0MiJ9XX0sInJlcUtleSI6IncyeFRHSXk3M3g4WExDR2hSV3Jyd1lleU1kYU11TC1zOWpQT194UzNyOGsiLCJsb2dzIjoiY0ZhTi1nbVpJbkpjVTRaekc1cGhuYm1GcWJlNS1fMzVvM1I3a3NXbFNOMCIsIm1ldGFEYXRhIjpudWxsLCJjb250aW51YXRpb24iOm51bGwsInR4SWQiOjE3fQ
  - - eyJoYXNoIjoiX1JqeTFBbVY2cl9qSmhKM3h3TksxbjVDRHpVeEJ0MGRUOTAzLUg3SUpDMCIsInNpZ3MiOlt7InNpZyI6IjNlZGJiZTcwN2I2YTI4OGNlYmVkYTNlODIxMDQ3YjEyODc3MDgwMjM1MGQzMjE3Njg1N2JkN2Y0YmNiOTEwZjMxMjhiYzFkNGQyM2M1MjAwZDI0NDMxZDExMDM5ZWYyNDA4ZWM2ZmQxYTE4MTYxMmYwZTlhZjI0ZDcyMDUzYTBkIn1dLCJjbWQiOiJ7XCJuZXR3b3JrSWRcIjpcInNsb3dmb3JrLUNQTS1wZXRlcnNvblwiLFwicGF5bG9hZFwiOntcImV4ZWNcIjp7XCJkYXRhXCI6e1widGVzdC1hZG1pbi1rZXlzZXRcIjpbXCIzNjg4MjBmODBjMzI0YmJjN2MyYjA2MTA2ODhhN2RhNDNlMzlmOTFkMTE4NzMyNjcxY2Q5Yzc1MDBmZjQzY2NhXCJdfSxcImNvZGVcIjpcIihmcmVlLnRlc3QxLnRyYW5zZmVyIFxcXCJBY2N0MVxcXCIgXFxcIkFjY3QyXFxcIiAxLjAwKVwifX0sXCJzaWduZXJzXCI6W3tcInB1YktleVwiOlwiMzY4ODIwZjgwYzMyNGJiYzdjMmIwNjEwNjg4YTdkYTQzZTM5ZjkxZDExODczMjY3MWNkOWM3NTAwZmY0M2NjYVwifV0sXCJtZXRhXCI6e1wiY3JlYXRpb25UaW1lXCI6MCxcInR0bFwiOjEwMDAwMDAsXCJnYXNMaW1pdFwiOjEwMDAwLFwiY2hhaW5JZFwiOlwiMFwiLFwiZ2FzUHJpY2VcIjoxLjBlLTIsXCJzZW5kZXJcIjpcInNlbmRlcjAwXCJ9LFwibm9uY2VcIjpcIjEzXCJ9In0
    - eyJnYXMiOjQwNywicmVzdWx0Ijp7InN0YXR1cyI6InN1Y2Nlc3MiLCJkYXRhIjoiV3JpdGUgc3VjY2VlZGVkIn0sInJlcUtleSI6Il9SankxQW1WNnJfakpoSjN4d05LMW41Q0R6VXhCdDBkVDkwMy1IN0lKQzAiLCJsb2dzIjoiLVVKQktPTDFzTm5tTFBjVkt2b0ZxMUZ4R1R0WnZnZHhSd1NJTDdDSVNydyIsIm1ldGFEYXRhIjpudWxsLCJjb250aW51YXRpb24iOm51bGwsInR4SWQiOjIwfQ
  - - eyJoYXNoIjoicHpKTkQ4TVMtVV9SN3Y3T0Qtd1psT1NOOUdBZDlaLVEtRmVpLWY4Q0g5VSIsInNpZ3MiOlt7InNpZyI6ImZiN2JhOTJlZDhjMGMwMWJiZDk5MzdlMjg2NzRkYzBiNzI3OGRlNjExNWMwYzY0MDc5NzkxZDkxMzQ5Mzk3ODQ4YmI2NDg2NjYwOTQ2MGUyYjE1ODMxMzZjMDc0YjdmNTJiOTAwMmVkYzVlNDUxNzkzOTZhNWU5ZjI0NTUwYTBmIn1dLCJjbWQiOiJ7XCJuZXR3b3JrSWRcIjpcInNsb3dmb3JrLUNQTS1wZXRlcnNvblwiLFwicGF5bG9hZFwiOntcImV4ZWNcIjp7XCJkYXRhXCI6e1widGVzdC1hZG1pbi1rZXlzZXRcIjpbXCIzNjg4MjBmODBjMzI0YmJjN2MyYjA2MTA2ODhhN2RhNDNlMzlmOTFkMTE4NzMyNjcxY2Q5Yzc1MDBmZjQzY2NhXCJdfSxcImNvZGVcIjpcIihhdCAncHJldi1ibG9jay1oYXNoIChjaGFpbi1kYXRhKSlcIn19LFwic2lnbmVyc1wiOlt7XCJwdWJLZXlcIjpcIjM2ODgyMGY4MGMzMjRiYmM3YzJiMDYxMDY4OGE3ZGE0M2UzOWY5MWQxMTg3MzI2NzFjZDljNzUwMGZmNDNjY2FcIn1dLFwibWV0YVwiOntcImNyZWF0aW9uVGltZVwiOjAsXCJ0dGxcIjoxMDAwMDAwLFwiZ2FzTGltaXRcIjoxMDAwMCxcImNoYWluSWRcIjpcIjBcIixcImdhc1ByaWNlXCI6MS4wZS0yLFwic2VuZGVyXCI6XCJzZW5kZXIwMFwifSxcIm5vbmNlXCI6XCIxNFwifSJ9
    - eyJnYXMiOjgsInJlc3VsdCI6eyJzdGF0dXMiOiJzdWNjZXNzIiwiZGF0YSI6ImdqTmVmdmM3STRpblNOOUxFZkVCN0c0OUlvWC0ycGxEQmVUbFpwU1czQTQifSwicmVxS2V5IjoicHpKTkQ4TVMtVV9SN3Y3T0Qtd1psT1NOOUdBZDlaLVEtRmVpLWY4Q0g5VSIsImxvZ3MiOiJLbC1mN3AxMlc1R0hORmw1NVE5djRaWGhWWV85a3VscEdRRFhSQ1hLYkU0IiwibWV0YURhdGEiOm51bGwsImNvbnRpbnVhdGlvbiI6bnVsbCwidHhJZCI6MjN9
  - - eyJoYXNoIjoibkpyMUFFbDBjSHFyTkxCeUVXTEZuc1ZmV2dfNnZCT0tpS1cteWZxNW13byIsInNpZ3MiOlt7InNpZyI6IjdjODU4ZDZjMjFlNzI0YmY1NjNhMzQyOTBjYjRiN2Y4M2U0NjkyYmJkOGEwYzRiZDNiNzIzZWFiZmFjY2VlZTFjYmM3ZGVkNWE1N2YxMTUzMmE2MTI2NTI3M2UwZGViMGM3YmZlN2VmYmYyZWU4YWQyZjNhMzY4Zjg2NWEwMTA4In1dLCJjbWQiOiJ7XCJuZXR3b3JrSWRcIjpcInNsb3dmb3JrLUNQTS1wZXRlcnNvblwiLFwicGF5bG9hZFwiOntcImV4ZWNcIjp7XCJkYXRhXCI6e1widGVzdC1hZG1pbi1rZXlzZXRcIjpbXCIzNjg4MjBmODBjMzI0YmJjN2MyYjA2MTA2ODhhN2RhNDNlMzlmOTFkMTE4NzMyNjcxY2Q5Yzc1MDBmZjQzY2NhXCJdfSxcImNvZGVcIjpcIihhdCAnYmxvY2stdGltZSAoY2hhaW4tZGF0YSkpXCJ9fSxcInNpZ25lcnNcIjpbe1wicHViS2V5XCI6XCIzNjg4MjBmODBjMzI0YmJjN2MyYjA2MTA2ODhhN2RhNDNlMzlmOTFkMTE4NzMyNjcxY2Q5Yzc1MDBmZjQzY2NhXCJ9XSxcIm1ldGFcIjp7XCJjcmVhdGlvblRpbWVcIjowLFwidHRsXCI6MTAwMDAwMCxcImdhc0xpbWl0XCI6MTAwMDAsXCJjaGFpbklkXCI6XCIwXCIsXCJnYXNQcmljZVwiOjEuMGUtMixcInNlbmRlclwiOlwic2VuZGVyMDBcIn0sXCJub25jZVwiOlwiMTVcIn0ifQ
    - eyJnYXMiOjgsInJlc3VsdCI6eyJzdGF0dXMiOiJzdWNjZXNzIiwiZGF0YSI6eyJ0aW1lIjoiMTk3MC0wMS0wMVQwMDowMDowMFoifX0sInJlcUtleSI6Im5KcjFBRWwwY0hxck5MQnlFV0xGbnNWZldnXzZ2Qk9LaUtXLXlmcTVtd28iLCJsb2dzIjoia0g5M2hlNTZsUFJ4YTZFVWlRNWdUanFnUngxeTU5NXdodXlqV2Nyd3BCbyIsIm1ldGFEYXRhIjpudWxsLCJjb250aW51YXRpb24iOm51bGwsInR4SWQiOjI2fQ
  - - eyJoYXNoIjoieWdSODh2eHFnTGN2NWhodUpzcDNTMVFRbGZ1aS1DTWQ5WWRYYzA0Z1FkYyIsInNpZ3MiOlt7InNpZyI6Ijc4YTBmNjc1MzcyZDU5YjY1ZDdmZTZhNDgxZDI5MDIyYjU3ZTk0ODhhYTFlODBkZTE2OTE0YmM4OWE2YTk3ZThlYjZmYTRiYWI5ZDM0MTRmMGJiMzBmMzJkYjhhNDhiOGU3NGI4MDgzMTdiZjYwZDBkN2EyMGM1ZTEzZmY4NzBhIn1dLCJjbWQiOiJ7XCJuZXR3b3JrSWRcIjpcInNsb3dmb3JrLUNQTS1wZXRlcnNvblwiLFwicGF5bG9hZFwiOntcImV4ZWNcIjp7XCJkYXRhXCI6e1widGVzdC1hZG1pbi1rZXlzZXRcIjpbXCIzNjg4MjBmODBjMzI0YmJjN2MyYjA2MTA2ODhhN2RhNDNlMzlmOTFkMTE4NzMyNjcxY2Q5Yzc1MDBmZjQzY2NhXCJdfSxcImNvZGVcIjpcIihhdCAnYmxvY2staGVpZ2h0IChjaGFpbi1kYXRhKSlcIn19LFwic2lnbmVyc1wiOlt7XCJwdWJLZXlcIjpcIjM2ODgyMGY4MGMzMjRiYmM3YzJiMDYxMDY4OGE3ZGE0M2UzOWY5MWQxMTg3MzI2NzFjZDljNzUwMGZmNDNjY2FcIn1dLFwibWV0YVwiOntcImNyZWF0aW9uVGltZVwiOjAsXCJ0dGxcIjoxMDAwMDAwLFwiZ2FzTGltaXRcIjoxMDAwMCxcImNoYWluSWRcIjpcIjBcIixcImdhc1ByaWNlXCI6MS4wZS0yLFwic2VuZGVyXCI6XCJzZW5kZXIwMFwifSxcIm5vbmNlXCI6XCIxNlwifSJ9
    - eyJnYXMiOjgsInJlc3VsdCI6eyJzdGF0dXMiOiJzdWNjZXNzIiwiZGF0YSI6MX0sInJlcUtleSI6InlnUjg4dnhxZ0xjdjVoaHVKc3AzUzFRUWxmdWktQ01kOVlkWGMwNGdRZGMiLCJsb2dzIjoibzV5TWdNRDFOd0RpQXFFMVFDREg0Y29VUkpXcndPT3ZmbFh6TkY5UGV6NCIsIm1ldGFEYXRhIjpudWxsLCJjb250aW51YXRpb24iOm51bGwsInR4SWQiOjI5fQ
  - - eyJoYXNoIjoiODJ4M085bGNEbHhVWUdhTkJYSy1iRm9kbHYtNlVTUVRqUVFRdFJibnFLVSIsInNpZ3MiOlt7InNpZyI6IjFmMGFkMjJmYjRhZmJhOTg4ZDNjYzI3ODFhZjJlNTE5NmIwZWEyZGFjMzU3YjA2OTc3NzI1YzQ5MTRlYjdiODdjN2EzMTk5MjU3NTk2YTVhNGFmOGUyMTg0YzMyYzQzZWQwYWEzMjVkYjU2YWFiZTkwM2VkMWY3ZmM1OGYwZTBiIn1dLCJjbWQiOiJ7XCJuZXR3b3JrSWRcIjpcInNsb3dmb3JrLUNQTS1wZXRlcnNvblwiLFwicGF5bG9hZFwiOntcImV4ZWNcIjp7XCJkYXRhXCI6e1widGVzdC1hZG1pbi1rZXlzZXRcIjpbXCIzNjg4MjBmODBjMzI0YmJjN2MyYjA2MTA2ODhhN2RhNDNlMzlmOTFkMTE4NzMyNjcxY2Q5Yzc1MDBmZjQzY2NhXCJdfSxcImNvZGVcIjpcIihhdCAnZ2FzLWxpbWl0IChjaGFpbi1kYXRhKSlcIn19LFwic2lnbmVyc1wiOlt7XCJwdWJLZXlcIjpcIjM2ODgyMGY4MGMzMjRiYmM3YzJiMDYxMDY4OGE3ZGE0M2UzOWY5MWQxMTg3MzI2NzFjZDljNzUwMGZmNDNjY2FcIn1dLFwibWV0YVwiOntcImNyZWF0aW9uVGltZVwiOjAsXCJ0dGxcIjoxMDAwMDAwLFwiZ2FzTGltaXRcIjoxMDAwMCxcImNoYWluSWRcIjpcIjBcIixcImdhc1ByaWNlXCI6MS4wZS0yLFwic2VuZGVyXCI6XCJzZW5kZXIwMFwifSxcIm5vbmNlXCI6XCIxN1wifSJ9
    - eyJnYXMiOjgsInJlc3VsdCI6eyJzdGF0dXMiOiJzdWNjZXNzIiwiZGF0YSI6MTAwMDB9LCJyZXFLZXkiOiI4MngzTzlsY0RseFVZR2FOQlhLLWJGb2Rsdi02VVNRVGpRUVF0UmJucUtVIiwibG9ncyI6IkRlZWxsZTNxVkhRbHJ0N3lBWkx4cEZqUWk0OVNVdm9tUkxGb0FTRmg4aUEiLCJtZXRhRGF0YSI6bnVsbCwiY29udGludWF0aW9uIjpudWxsLCJ0eElkIjozMn0
  - - eyJoYXNoIjoiSWtQejh4OXY3VS0wak51elhNcTNTOVpfVDRMNnFXYU1feVJxTzdRMV9ibyIsInNpZ3MiOlt7InNpZyI6ImE2ZjcwMDc1YzI2ZjMxNWRhYjJlM2FkMzM0ZDNjYTI1ODkwYzlmMWE1YmZkMmNmNTg0NDY1NzcxZmI3NWQwNDgwZmRhNDhhYmZmMWY0Yzg3ZWFhYmUzN2ZmYTEzMjg1NjllNDE5NmM3OTViY2VmN2JkNGYyYTZiNTI3MzBjMTA3In1dLCJjbWQiOiJ7XCJuZXR3b3JrSWRcIjpcInNsb3dmb3JrLUNQTS1wZXRlcnNvblwiLFwicGF5bG9hZFwiOntcImV4ZWNcIjp7XCJkYXRhXCI6e1widGVzdC1hZG1pbi1rZXlzZXRcIjpbXCIzNjg4MjBmODBjMzI0YmJjN2MyYjA2MTA2ODhhN2RhNDNlMzlmOTFkMTE4NzMyNjcxY2Q5Yzc1MDBmZjQzY2NhXCJdfSxcImNvZGVcIjpcIihhdCAnZ2FzLXByaWNlIChjaGFpbi1kYXRhKSlcIn19LFwic2lnbmVyc1wiOlt7XCJwdWJLZXlcIjpcIjM2ODgyMGY4MGMzMjRiYmM3YzJiMDYxMDY4OGE3ZGE0M2UzOWY5MWQxMTg3MzI2NzFjZDljNzUwMGZmNDNjY2FcIn1dLFwibWV0YVwiOntcImNyZWF0aW9uVGltZVwiOjAsXCJ0dGxcIjoxMDAwMDAwLFwiZ2FzTGltaXRcIjoxMDAwMCxcImNoYWluSWRcIjpcIjBcIixcImdhc1ByaWNlXCI6MS4wZS0yLFwic2VuZGVyXCI6XCJzZW5kZXIwMFwifSxcIm5vbmNlXCI6XCIxOFwifSJ9
    - eyJnYXMiOjgsInJlc3VsdCI6eyJzdGF0dXMiOiJzdWNjZXNzIiwiZGF0YSI6MS4wZS0yfSwicmVxS2V5IjoiSWtQejh4OXY3VS0wak51elhNcTNTOVpfVDRMNnFXYU1feVJxTzdRMV9ibyIsImxvZ3MiOiJ5bDh6SXRpaDU1NUJ0cTlWQ0Jvd1ZiWGNablBSRFJwc0NmMmVCNDdtZ2RZIiwibWV0YURhdGEiOm51bGwsImNvbnRpbnVhdGlvbiI6bnVsbCwidHhJZCI6MzV9
  - - eyJoYXNoIjoiVVJxUzBBM0lqSnprX19fOWRBNzVUSTFGTVg3OEJWeVJXSW1xcjFTMTlKbyIsInNpZ3MiOlt7InNpZyI6IjcxZmQyYmY0MTg5Y2E0MzE4NjBlN2FjYTgxMzJjZTI4MmJmNDc3MTY2MTAwNTQ1OThlNDAzN2I5YmE1OTI3MzViODMxMWEwZTc0NDE5MDMyZTI5ZTUyMmRhMTllZmZiYjk3M2VmODUzOWJhNGRlMWQ2MDU4NmJlNDYxMjNhMDAxIn1dLCJjbWQiOiJ7XCJuZXR3b3JrSWRcIjpcInNsb3dmb3JrLUNQTS1wZXRlcnNvblwiLFwicGF5bG9hZFwiOntcImV4ZWNcIjp7XCJkYXRhXCI6e1widGVzdC1hZG1pbi1rZXlzZXRcIjpbXCIzNjg4MjBmODBjMzI0YmJjN2MyYjA2MTA2ODhhN2RhNDNlMzlmOTFkMTE4NzMyNjcxY2Q5Yzc1MDBmZjQzY2NhXCJdfSxcImNvZGVcIjpcIihhdCAnY2hhaW4taWQgKGNoYWluLWRhdGEpKVwifX0sXCJzaWduZXJzXCI6W3tcInB1YktleVwiOlwiMzY4ODIwZjgwYzMyNGJiYzdjMmIwNjEwNjg4YTdkYTQzZTM5ZjkxZDExODczMjY3MWNkOWM3NTAwZmY0M2NjYVwifV0sXCJtZXRhXCI6e1wiY3JlYXRpb25UaW1lXCI6MCxcInR0bFwiOjEwMDAwMDAsXCJnYXNMaW1pdFwiOjEwMDAwLFwiY2hhaW5JZFwiOlwiMFwiLFwiZ2FzUHJpY2VcIjoxLjBlLTIsXCJzZW5kZXJcIjpcInNlbmRlcjAwXCJ9LFwibm9uY2VcIjpcIjE5XCJ9In0
    - eyJnYXMiOjgsInJlc3VsdCI6eyJzdGF0dXMiOiJzdWNjZXNzIiwiZGF0YSI6IjAifSwicmVxS2V5IjoiVVJxUzBBM0lqSnprX19fOWRBNzVUSTFGTVg3OEJWeVJXSW1xcjFTMTlKbyIsImxvZ3MiOiJVWTEwSjRzN3NiaDFWbTR3WmxaRHV4T1NBYWtfaG5YVWxrWWpXaHBTajB3IiwibWV0YURhdGEiOm51bGwsImNvbnRpbnVhdGlvbiI6bnVsbCwidHhJZCI6Mzh9
  - - eyJoYXNoIjoiZXNmMlN1UmlXbVdHa1NORW5zeGtMVkR4UEJVbVpmUWNMUk1WQ3k5RWZfcyIsInNpZ3MiOlt7InNpZyI6IjEwYjJiMTZhMDg3YjAwZmVjNTE1N2IwNTk3N2RiNDhmYWY5Mjg4MDJhZWIwYTQ0MzIxMjhmYjg0ZTlhYzBhY2U5Yjg5ZjM0MzJmZjBiZDIwZTU4MzY0MWExMmM4ZjdlNzA4YWU2MmU2ZGE3ZWZiMTM2NGFkNzU2OWEwZDA3MDBkIn1dLCJjbWQiOiJ7XCJuZXR3b3JrSWRcIjpcInNsb3dmb3JrLUNQTS1wZXRlcnNvblwiLFwicGF5bG9hZFwiOntcImV4ZWNcIjp7XCJkYXRhXCI6e1widGVzdC1hZG1pbi1rZXlzZXRcIjpbXCIzNjg4MjBmODBjMzI0YmJjN2MyYjA2MTA2ODhhN2RhNDNlMzlmOTFkMTE4NzMyNjcxY2Q5Yzc1MDBmZjQzY2NhXCJdfSxcImNvZGVcIjpcIihhdCAnc2VuZGVyIChjaGFpbi1kYXRhKSlcIn19LFwic2lnbmVyc1wiOlt7XCJwdWJLZXlcIjpcIjM2ODgyMGY4MGMzMjRiYmM3YzJiMDYxMDY4OGE3ZGE0M2UzOWY5MWQxMTg3MzI2NzFjZDljNzUwMGZmNDNjY2FcIn1dLFwibWV0YVwiOntcImNyZWF0aW9uVGltZVwiOjAsXCJ0dGxcIjoxMDAwMDAwLFwiZ2FzTGltaXRcIjoxMDAwMCxcImNoYWluSWRcIjpcIjBcIixcImdhc1ByaWNlXCI6MS4wZS0yLFwic2VuZGVyXCI6XCJzZW5kZXIwMFwifSxcIm5vbmNlXCI6XCIxMTBcIn0ifQ
    - eyJnYXMiOjgsInJlc3VsdCI6eyJzdGF0dXMiOiJzdWNjZXNzIiwiZGF0YSI6InNlbmRlcjAwIn0sInJlcUtleSI6ImVzZjJTdVJpV21XR2tTTkVuc3hrTFZEeFBCVW1aZlFjTFJNVkN5OUVmX3MiLCJsb2dzIjoiVU95OWdjVjRJVjk4M1lNU3RGRWlFTGVIQ0ZEZEF0c3ZqY3lpMk5aeG53ayIsIm1ldGFEYXRhIjpudWxsLCJjb250aW51YXRpb24iOm51bGwsInR4SWQiOjQxfQ
  transactionsHash: WdFstQYQSjfr0rwh9teCqZmmO23lOQhkpqBebSBtkYQ
test-group: new-block
